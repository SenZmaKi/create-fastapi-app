services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: {{APP_NAME}}-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-{{APP_NAME}}}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - {{APP_NAME}}-network

  # FastAPI Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - FAST_API_PORT=${FAST_API_PORT:-8000}
    container_name: {{APP_NAME}}-fastapi
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${FAST_API_PORT:-8000}:${FAST_API_PORT:-8000}"
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
    restart: unless-stopped
    networks:
      - {{APP_NAME}}-network

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local

networks:
  {{APP_NAME}}-network:
    driver: bridge
